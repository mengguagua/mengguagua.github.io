{"version":3,"sources":["webpack:///./src/pages/gsap/gsap.vue?d86c","webpack:///./src/pages/gsap/gsap.vue","webpack:///src/pages/gsap/gsap.vue","webpack:///./src/pages/gsap/gsap.vue?bdca","webpack:///./src/pages/gsap/gsap.vue?8b76"],"names":["render","_vm","this","_c","_self","staticClass","attrs","text","_m","text2","text3","text4","text5","staticRenderFns","staticStyle","_v","components","descriptionsTable","data","grid","methods","initDemo1","gsap","rotation","x","duration","initDemo2","repeat","repeatDelay","tl","startAt","to","keyframes","ease","y","onComplete","console","delay","scale","yoyo","initDemo3","paused","document","buildGrid","vars","i","box","rows","cols","width","gutter","className","w","parent","css","l","container","initDemo4","demo4Tl","stagger","amount","axis","from","mounted","created","component"],"mappings":"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","file":"js/chunk-626bb6f0.bb5b562b.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./gsap.vue?vue&type=style&index=0&id=6798f7de&prod&scoped=true&lang=css&\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('v-md-editor',{staticClass:\"github-markdown-body\",attrs:{\"value\":_vm.text,\"mode\":\"preview\"}}),_vm._m(0),_c('v-md-editor',{staticClass:\"github-markdown-body\",attrs:{\"value\":_vm.text2,\"mode\":\"preview\"}}),_vm._m(1),_c('v-md-editor',{staticClass:\"github-markdown-body\",attrs:{\"value\":_vm.text3,\"mode\":\"preview\"}}),_vm._m(2),_c('v-md-editor',{staticClass:\"github-markdown-body\",attrs:{\"value\":_vm.text4,\"mode\":\"preview\"}}),_vm._m(3),_c('v-md-editor',{staticClass:\"github-markdown-body\",attrs:{\"value\":_vm.text5,\"mode\":\"preview\"}})],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"demo-content\"},[_c('div',{staticStyle:{\"width\":\"60vw\"}},[_c('div',{staticClass:\"demo1\"},[_c('div',{staticClass:\"box green\"}),_c('div',{staticClass:\"box purple\"}),_c('div',{staticClass:\"box blue\"})])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"demo-content\"},[_c('div',{staticStyle:{\"width\":\"60vw\"}},[_c('div',{staticClass:\"demo2 demoLine\"},[_c('div',{staticClass:\"box green2\"})])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"demo-content\"},[_c('div',{staticStyle:{\"width\":\"60vw\"}},[_c('div',{staticClass:\"demo3 demoLine\"},[_c('div',{staticClass:\"box purple2\"}),_c('button',{attrs:{\"id\":\"play\"}},[_vm._v(\"play()\")]),_c('button',{attrs:{\"id\":\"pause\"}},[_vm._v(\"pause()\")]),_c('button',{attrs:{\"id\":\"resume\"}},[_vm._v(\"resume()\")]),_c('button',{attrs:{\"id\":\"reverse\"}},[_vm._v(\"reverse()\")]),_c('button',{attrs:{\"id\":\"restart\"}},[_vm._v(\"restart()\")])])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"demo-content\"},[_c('div',{staticStyle:{\"width\":\"60vw\"}},[_c('div',{staticClass:\"demo4 demoLine\"},[_c('div',{attrs:{\"id\":\"container\"}})])])])\n}]\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <v-md-editor class=\"github-markdown-body\" :value=\"text\" mode=\"preview\"></v-md-editor>\n    <div class=\"demo-content\">\n      <div style=\"width: 60vw\">\n        <div class=\"demo1\">\n          <div class=\"box green\"></div>\n          <div class=\"box purple\"></div>\n          <div class=\"box blue\"></div>\n        </div>\n      </div>\n    </div>\n    <v-md-editor class=\"github-markdown-body\" :value=\"text2\" mode=\"preview\"></v-md-editor>\n    <div class=\"demo-content\">\n      <div style=\"width: 60vw\">\n        <div class=\"demo2 demoLine\">\n          <div class=\"box green2\"></div>\n        </div>\n      </div>\n    </div>\n    <v-md-editor class=\"github-markdown-body\" :value=\"text3\" mode=\"preview\"></v-md-editor>\n    <div class=\"demo-content\">\n      <div style=\"width: 60vw\">\n        <div class=\"demo3 demoLine\">\n          <div class=\"box purple2\"></div>\n          <button id=\"play\">play()</button>\n          <button id=\"pause\">pause()</button>\n          <button id=\"resume\">resume()</button>\n          <button id=\"reverse\">reverse()</button>\n          <button id=\"restart\">restart()</button>\n        </div>\n      </div>\n    </div>\n    <v-md-editor class=\"github-markdown-body\" :value=\"text4\" mode=\"preview\"></v-md-editor>\n    <div class=\"demo-content\">\n      <div style=\"width: 60vw\">\n        <div class=\"demo4 demoLine\">\n          <div id=\"container\"></div>\n        </div>\n      </div>\n    </div>\n    <v-md-editor class=\"github-markdown-body\" :value=\"text5\" mode=\"preview\"></v-md-editor>\n  </div>\n</template>\n\n<script>\nimport descriptionsTable from \"@/components/descriptionsTable/DescriptionsTable\";\n\nexport default {\n  components: {\n    descriptionsTable,\n  },\n  data() {\n    return {\n      grid: [7,15],\n      text: `\n  ### gsap动画库\n  官方文档地址：https://greensock.com/docs/v3/GSAP\n  gsap本身一个是立即执行的高阶函数，格式是：\\`!function(t, e){...}(this,function(e){...});\\`\n  调试文件路径：/src/pages/gsap/gsap.vue\n  #### 示例1\n  - 下面创建\\`Tween\\`的三个方法。第一个参数是操作对象，即\\`class样式名\\`，第二个参数是动画\\`动作对象\\`。\n  > tip:Tween是gsap的实例\n  - 第二个参数内容参考：https://greensock.com/docs/v3/GSAP/Tween\n  > \\`rotation\\`旋转角度\n  > \\`x\\`:x轴移动距离（**坐标轴原点在左上角，向右为正，向下为正**）\n  > \\`y\\`:y轴移动距离\n  > \\`duration\\`动画持续时间\n  - to顺序动画方法，from倒序动画方法，fromTo起始两个动画效果方法\n  \\`\\`\\`\n  // duration动画时间，默认0.5s\n  gsap.to(\".green\", {rotation: 360, x: 100, duration: 1.5});\n  // gsap.from(\".purple\", {rotation: 360, x: 100, duration: 1.5});\n  gsap.from(\".purple\", {rotation: -360, x: -100, duration: 1});\n  gsap.fromTo(\".blue\", {x: -100},{rotation: 360, x: 100, duration: 1});\n  \\`\\`\\`\n      `,\n      text2: `\n  #### 示例2\n  按时间轴（\\`timeline\\`）运动一个对象。\n  \\`timeline\\`类似Tween集合的\\`容器\\`,默认配置可以放这个容器里，如下方{repeat: -1, repeatDelay: 0.5}会对时间轴上所有动画对象生效\n  - \\`startAt\\`可以定义起始数据\n  - \\`keyframes\\`关键帧，即把多次时间轴的to()合并在一起\n  - \\`ease\\`动画移动速率函数\n  - \\`onComplete\\`完成一帧后的回调方法\n  - \\`delay\\`暂停动画时间，单位秒\n  - \\`scale\\`缩放，默认值1，0.1即缩小到十分之一\n  - \\`yoyo\\`类似溜溜球。来回动画运动\n  - \\`repeat\\`重复次数;-1就一直重复\n  \\`\\`\\`\n  let tl = gsap.timeline({repeat: -1, repeatDelay: 0.5});\n  tl.to(\".green2\", {startAt: {x: 0}, x:-100, duration: 1})\n    .to(\".green2\", {\n      keyframes: [\n        {x:200, ease: 'power2.out'},\n        {y:50},\n        {x:0},\n        {y:-20, onComplete: () => {console.log('完成一次关键帧keyframes')}},\n      ]\n    });\n  tl.to(\".green2\", {rotation: 360,duration: 1.5, delay: 1,})\n    .to(\".green2\", {\n      scale: 0.1,\n      duration: 1.5,\n      yoyo: true,\n      repeat: 1, // 重复一次;-1就一直重复\n    })\n  \\`\\`\\`\n      `,\n      text3: `\n  #### 示例3\n  tween实例的常用方法\n  - \\`paused\\`设置true，最初就是暂定状态\n  - \\`runBackwards\\`最初就倒播动画\n  - \\`play\\`运行动画\n  - \\`pause\\`暂停动画\n  - \\`resume\\`恢复暂停动画\n  - \\`reverse\\`倒播动画\n  - \\`restart\\`重启动画\n  \\`\\`\\`\n  // 使用tween实例的常用方法\n  let tween = gsap.fromTo(\".purple2\", {x: 0},{\n    duration: 4,\n    x: () => 300,\n    rotation: 360,\n    paused: true,\n    repeat: 1, // 重复一次\n    // runBackwards: true, // 反转操作\n  });\n  document.querySelector(\"#play\").onclick = () => tween.play();\n  document.querySelector(\"#pause\").onclick = () => tween.pause();\n  document.querySelector(\"#resume\").onclick = () => tween.resume();\n  document.querySelector(\"#reverse\").onclick = () => tween.reverse();\n  document.querySelector(\"#restart\").onclick = () => tween.restart();\n  \\`\\`\\`\n      `,\n      text4: `\n   #### 示例4\n   - \\`scale\\`,\\`x轴\\`,\\`y轴\\`等属性可用函数控制\n   > 函数第一个参数是class为boxContainer的div集合的下标。第二个参数当前div。第三个参数div集合。\n   > 这样就可以控制不同格子有不同的缩放比例\n   - \\`random\\`x和y等属性支持random函数，可以随机偏离不同距离。如下y的值是随机数在-100和200之间。\n   > random([-100,-50, 0,100,150,200])也可以是指定范围的数组\n   - \\`stagger\\`各个格子交错运行动画\n   > \\`amount\\`指定交错运行的时间\n   > \\`grid\\`指定交错的格子行列数组，也可以直接给'auto'\n   > \\`axis\\`错位效果是按行还是列一起错位，可选值为\\`null,'x'或'y' \\`\n   > \\`ease\\`错位的变速效果。可选\"power3.inOut\"，\"power2.in\"等\n   > \\`from\\`错位开始的位置，可选值为\\`\"start\", \"center\", \"edges\", \"random\", \"end\"\\`\n   \\`\\`\\`\n   // 初始化多个格子\n   grid: [7,15],\n   this.buildGrid({\n      grid: this.grid,\n      className: \"boxContainer\",\n      width: 1000,\n      gutter: 15,\n      parent: \"#container\",\n   });\n   this.initDemo4();\n   buildGrid(vars) {\n      vars = vars || {};\n      let container = document.createElement(\"div\"),\n          rows = vars.grid[0] || 5,\n          cols = vars.grid[1] || 5,\n          width = vars.width || 100,\n          gutter = vars.gutter || 1,\n          className = vars.className || \"\",\n          w = (width - cols * gutter) / cols,\n          parent = (typeof(vars.parent) === \"string\") ? document.querySelector(vars.parent) : vars.parent ? vars.parent : document.body,\n          css = \"display: inline-block; margin: 0 \" + (gutter / width * 100) + \"% \" + (gutter / width * 100) + \"% 0; width: \" + (w / width * 100) + \"%;\",\n          l = rows * cols,\n          i, box;\n      for (i = 0; i < l; i++) {\n        box = document.createElement(\"div\");\n        box.style.cssText = css;\n        box.setAttribute(\"class\", className);\n        box.index = i;\n        box.setAttribute(\"data-index\", i);\n        if (vars.onCellClick) {\n          box.addEventListener(\"click\", vars.onCellClick);\n        }\n        container.appendChild(box);\n      }\n      container.style.cssText = \"width:\" + width + \"px; line-height: 0; padding:\" + gutter + \"px 0 0 \" + gutter + \"px; display:inline-block;\";\n      parent.appendChild(container);\n      console.log('container', container);\n      return container;\n    },\n   initDemo4() {\n      let demo4Tl = gsap.timeline({repeat: -1, repeatDelay: 0.5});\n      demo4Tl.to(\".boxContainer\", {\n        duration: 1, // 继续时间1s\n        scale: (index, target, targets) => {\n          if (index > 40) {\n            return 0.01;\n          } else {\n            return index * 0.015;\n          }\n        },\n        y: 'random(-100, 200)', // y的值是随机数在-100和200之间。random([-100,-50, 0,100,150,200])也可以是指定范围的数组\n        x: (index, target, targets) => {\n          return index * 1;\n        },\n        yoyo: true,\n        repeat: 1,\n        ease: \"power1.inOut\",\n        stagger: {\n          amount: 2,\n          grid: this.grid, // 交错内容是网格形状，可以几行几列。测试实际效果和设置'auto'一样\n          axis: 'null',\n          ease: 'none',\n          from: 'random'\n        }\n      });\n   },\n   \\`\\`\\`\n      `,\n      text5: `\n  #### 上述栗子的html和css\n  \\`\\`\\`\n  // html\n  <div>\n    <v-md-editor class=\"github-markdown-body\" :value=\"text\" mode=\"preview\"></v-md-editor>\n    <div class=\"demo-content\">\n      <div style=\"width: 60vw\">\n        <div class=\"demo1\">\n          <div class=\"box green\"></div>\n          <div class=\"box purple\"></div>\n          <div class=\"box blue\"></div>\n        </div>\n      </div>\n    </div>\n    <v-md-editor class=\"github-markdown-body\" :value=\"text2\" mode=\"preview\"></v-md-editor>\n    <div class=\"demo-content\">\n      <div style=\"width: 60vw\">\n        <div class=\"demo2 demoLine\">\n          <div class=\"box green2\"></div>\n        </div>\n      </div>\n    </div>\n    <v-md-editor class=\"github-markdown-body\" :value=\"text3\" mode=\"preview\"></v-md-editor>\n    <div class=\"demo-content\">\n      <div style=\"width: 60vw\">\n        <div class=\"demo3 demoLine\">\n          <div class=\"box purple2\"></div>\n          <button id=\"play\">play()</button>\n          <button id=\"pause\">pause()</button>\n          <button id=\"resume\">resume()</button>\n          <button id=\"reverse\">reverse()</button>\n          <button id=\"restart\">restart()</button>\n        </div>\n      </div>\n    </div>\n    <v-md-editor class=\"github-markdown-body\" :value=\"text4\" mode=\"preview\"></v-md-editor>\n    <div class=\"demo-content\">\n      <div style=\"width: 60vw\">\n        <div class=\"demo4 demoLine\">\n          <div id=\"container\"></div>\n        </div>\n      </div>\n    </div>\n    <v-md-editor class=\"github-markdown-body\" :value=\"text5\" mode=\"preview\"></v-md-editor>\n  </div>\n\n  // css\n  <style scoped>\n  /deep/ .github-markdown-body {\n    padding: 12px 16px 0px;\n  }\n  .demo-content {\n    border: 1px solid rgba(244,244,244, 0.9);\n    padding: 12px 40px 24px;\n    margin-bottom: 12px;\n  }\n  button {\n    padding: 10px 16px;\n    text-transform: none;\n    margin: 0.25rem;\n    background-color: transparent;\n    border: 1px solid rgba(0,0,0,0.3);\n    cursor: pointer;\n  }\n  button:hover{\n    background-color: rgba(0,0,0,0.3);\n  }\n  .demo1 {\n    /*height: 30vh;*/\n    width: 60vw;\n    border-bottom: 1px solid rgba(0,0,0,0.3);\n  }\n  .box {\n    display: block;\n  }\n  .green {\n    border-radius: 4px;\n    width: 100px;\n    height: 100px;\n    background: aquamarine;\n  }\n  .purple {\n    border-radius: 4px;\n    width: 100px;\n    height: 100px;\n    background: purple;\n  }\n  .blue {\n    border-radius: 4px;\n    width: 100px;\n    height: 100px;\n    background: dodgerblue;\n  }\n  .demoLine {\n    /*height: 10vh;*/\n    padding: 5vh 0;\n    width: 60vw;\n    border-bottom: 1px solid rgba(0,0,0,0.3);\n  }\n  .green2 {\n    border-radius: 4px;\n    width: 100px;\n    height: 100px;\n    background: aquamarine;\n  }\n  .purple2 {\n    margin-bottom: 40px;\n    border-radius: 4px;\n    width: 100px;\n    height: 100px;\n    background: purple;\n  }\n  #container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    overflow: visible;\n  }\n  /*vue下需要加deep，因为加scoped后，vue会生成类似data-v-1508e83b的唯一标识，而js动态生成的dom不会带这类唯一标识*/\n  /deep/ .boxContainer {\n    background-color: #88ce02;\n    position: relative;\n  }\n  /deep/ .boxContainer:before {\n    padding-top:100%;\n    content:\"\";\n    display:block;\n  }\n  </style>\n  \\`\\`\\`\n      `,\n    };\n  },\n  methods: {\n    initDemo1() {\n      // 创建Tween的三个方法。第一个参数是操作对象，第二个参数是动画动作对象。//Tween是gsap的实例\n      // 第二个参数内容参考：https://greensock.com/docs/v3/GSAP/Tween\n      // to顺序动画，from倒序动画\n      gsap.to(\".green\", {rotation: 360, x: 100, duration: 1.5}); // duration动画时间，默认0.5s\n      // gsap.from(\".purple\", {rotation: 360, x: 100, duration: 1.5}); // duration动画时间，默认0.5s\n      gsap.from(\".purple\", {rotation: -360, x: -100, duration: 1});\n      gsap.fromTo(\".blue\", {x: -100},{rotation: 360, x: 100, duration: 1});\n    },\n    initDemo2() {\n      // 按时间轴运动一个对象。//timeline类似Tween集合的容器,默认配置可以放这个容器里\n      let tl = gsap.timeline({repeat: -1, repeatDelay: 0.5});\n      // tl.seek(2); // 直接跳转到动画运行2s后的位置\n      tl.to(\".green2\", {startAt: {x: 0}, x:-100, duration: 1}) // startAt定义起始数据\n        .to(\".green2\", {\n          keyframes: [ // 关键帧，即把多次时间轴的to()合并在一起\n            {x:200, ease: 'power2.out'},\n            {y:50},\n            {x:0},\n            {y:-20, onComplete: () => {console.log('完成一次关键帧keyframes')}},\n          ]\n        });\n      tl.to(\".green2\", {rotation: 360,duration: 1.5, delay: 1,}) // delay暂停动画时间，单位秒\n        .to(\".green2\", {\n          scale: 0.1,\n          duration: 1.5,\n          yoyo: true, // 类似溜溜球。来回动画运动\n          repeat: 1, // 重复一次;-1就一直重复\n        })\n    },\n    initDemo3() {\n      // 使用tween实例的常用方法\n      let tween = gsap.fromTo(\".purple2\", {x: 0},{\n        duration: 4,\n        x: () => 300,\n        rotation: 360,\n        paused: true,\n        repeat: 1, // 重复一次\n        // runBackwards: true, // 反转操作\n      });\n      document.querySelector(\"#play\").onclick = () => tween.play();\n      document.querySelector(\"#pause\").onclick = () => tween.pause();\n      document.querySelector(\"#resume\").onclick = () => tween.resume();\n      document.querySelector(\"#reverse\").onclick = () => tween.reverse();\n      document.querySelector(\"#restart\").onclick = () => tween.restart();\n    },\n    buildGrid(vars) {\n      vars = vars || {};\n      let container = document.createElement(\"div\"),\n          rows = vars.grid[0] || 5,\n          cols = vars.grid[1] || 5,\n          width = vars.width || 100,\n          gutter = vars.gutter || 1,\n          className = vars.className || \"\",\n          w = (width - cols * gutter) / cols,\n          parent = (typeof(vars.parent) === \"string\") ? document.querySelector(vars.parent) : vars.parent ? vars.parent : document.body,\n          css = \"display: inline-block; margin: 0 \" + (gutter / width * 100) + \"% \" + (gutter / width * 100) + \"% 0; width: \" + (w / width * 100) + \"%;\",\n          l = rows * cols,\n          i, box;\n      for (i = 0; i < l; i++) {\n        box = document.createElement(\"div\");\n        box.style.cssText = css;\n        box.setAttribute(\"class\", className);\n        // console.log(`box${i}`, box);\n        box.index = i;\n        box.setAttribute(\"data-index\", i);\n        if (vars.onCellClick) {\n          box.addEventListener(\"click\", vars.onCellClick);\n        }\n        container.appendChild(box);\n      }\n      container.style.cssText = \"width:\" + width + \"px; line-height: 0; padding:\" + gutter + \"px 0 0 \" + gutter + \"px; display:inline-block;\";\n      parent.appendChild(container);\n      console.log('container', container);\n      return container;\n    },\n    initDemo4() {\n      let demo4Tl = gsap.timeline({repeat: -1, repeatDelay: 0.5});\n      demo4Tl.to(\".boxContainer\", {\n        duration: 1, // 继续时间1s\n        scale: (index, target, targets) => {\n          if (index > 40) {\n            return 0.01;\n          } else {\n            return index * 0.015;\n          }\n        },\n        y: 'random(-100, 200)', // y的值是随机数在-100和200之间。random([-100,-50, 0,100,150,200])也可以是指定范围的数组\n        x: (index, target, targets) => {\n          return index * 1;\n        },\n        yoyo: true,\n        repeat: 1,\n        ease: \"power1.inOut\",\n        stagger: {\n          amount: 2,\n          grid: this.grid, // 交错内容是网格形状，可以几行几列。测试实际效果和设置'auto'一样\n          axis: 'null',\n          ease: 'none',\n          from: 'random'\n        }\n      });\n    },\n  },\n  mounted() {\n    this.initDemo1();\n    this.initDemo2();\n    this.initDemo3();\n    // 初始化多个格子\n    this.buildGrid({\n      grid: this.grid,\n      className: \"boxContainer\",\n      width: 1000,\n      gutter: 15,\n      parent: \"#container\",\n    });\n    this.initDemo4();\n  },\n  created() {\n\n  }\n}\n</script>\n\n<style scoped>\n/deep/ .github-markdown-body {\n  padding: 12px 16px 0px;\n}\n.demo-content {\n  border: 1px solid rgba(244,244,244, 0.9);\n  padding: 12px 40px 24px;\n  margin-bottom: 12px;\n}\nbutton {\n  padding: 10px 16px;\n  text-transform: none;\n  margin: 0.25rem;\n  background-color: transparent;\n  border: 1px solid rgba(0,0,0,0.3);\n  cursor: pointer;\n}\nbutton:hover{\n  background-color: rgba(0,0,0,0.3);\n}\n.demo1 {\n  /*height: 30vh;*/\n  width: 60vw;\n  border-bottom: 1px solid rgba(0,0,0,0.3);\n}\n.box {\n  display: block;\n}\n.green {\n  border-radius: 4px;\n  width: 100px;\n  height: 100px;\n  background: aquamarine;\n}\n.purple {\n  border-radius: 4px;\n  width: 100px;\n  height: 100px;\n  background: purple;\n}\n.blue {\n  border-radius: 4px;\n  width: 100px;\n  height: 100px;\n  background: dodgerblue;\n}\n.demoLine {\n  /*height: 10vh;*/\n  padding: 5vh 0;\n  width: 60vw;\n  border-bottom: 1px solid rgba(0,0,0,0.3);\n}\n.green2 {\n  border-radius: 4px;\n  width: 100px;\n  height: 100px;\n  background: aquamarine;\n}\n.purple2 {\n  margin-bottom: 40px;\n  border-radius: 4px;\n  width: 100px;\n  height: 100px;\n  background: purple;\n}\n#container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: visible;\n}\n/*vue下需要加deep，因为加scoped后，vue会生成类似data-v-1508e83b的唯一标识，而js动态生成的dom不会带这类唯一标识*/\n/deep/ .boxContainer {\n  background-color: #88ce02;\n  position: relative;\n}\n/deep/ .boxContainer:before {\n  padding-top:100%;\n  content:\"\";\n  display:block;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./gsap.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./gsap.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./gsap.vue?vue&type=template&id=6798f7de&scoped=true&\"\nimport script from \"./gsap.vue?vue&type=script&lang=js&\"\nexport * from \"./gsap.vue?vue&type=script&lang=js&\"\nimport style0 from \"./gsap.vue?vue&type=style&index=0&id=6798f7de&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6798f7de\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}