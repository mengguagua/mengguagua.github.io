{"version":3,"sources":["webpack:///./src/pages/backgroundComponents/easyTableDemo.vue","webpack:///src/pages/backgroundComponents/easyTableDemo.vue","webpack:///./src/pages/backgroundComponents/easyTableDemo.vue?441b","webpack:///./src/pages/backgroundComponents/easyTableDemo.vue?68bd","webpack:///./src/pages/backgroundComponents/easyTableDemo.vue?ca55"],"names":["render","_vm","this","_c","_self","staticClass","attrs","text","_v","tableColumns","tableData","scopedSlots","_u","key","fn","model","value","callback","$$v","expression","proxy","text2","text3","tableColumns3","label","width","setCellStyle","setHeaderStyle","on","currentRow","selectedRow","select","selectAll","dblclick","text4","tableData2","loadMore","staticRenderFns","components","easyTable","data","name","title","sortable","showOverflowTooltip","headerSoltName","type","buttons","show","click","formatter","labels","tag","fixed","align","headerAlign","tableColumns2","aa","bb","cc","dd","ee","cee","methods","obj","rows","console","row","column","event","search","reset","doHandle","index","clickId","created","component"],"mappings":"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","file":"js/chunk-5627279b.bdd52992.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('v-md-editor',{staticClass:\"github-markdown-body\",attrs:{\"value\":_vm.text,\"mode\":\"preview\"}}),_c('div',{staticClass:\"demo-content\"},[_c('h4',[_vm._v(\"页面效果1\")]),_c('easy-table',{attrs:{\"columns\":_vm.tableColumns,\"data\":_vm.tableData},scopedSlots:_vm._u([{key:\"eeHeader\",fn:function(){return [_c('el-select',{attrs:{\"placeholder\":\"请选择\",\"size\":\"mini\"},model:{value:(_vm.value),callback:function ($$v) {_vm.value=$$v},expression:\"value\"}},[_c('el-option',{attrs:{\"label\":\"12345\",\"value\":\"12345\"}})],1)]},proxy:true}])})],1),_c('v-md-editor',{staticClass:\"github-markdown-body\",attrs:{\"value\":_vm.text2,\"mode\":\"preview\"}}),_c('div',{staticClass:\"demo-content\"},[_c('h4',[_vm._v(\"页面效果2\")]),_c('easy-table',{attrs:{\"columns\":_vm.tableColumns,\"data\":_vm.tableData,\"tableLoading\":true}})],1),_c('v-md-editor',{staticClass:\"github-markdown-body\",attrs:{\"value\":_vm.text3,\"mode\":\"preview\"}}),_c('div',{staticClass:\"demo-content\"},[_c('h4',[_vm._v(\"页面效果3\")]),_c('easy-table',{attrs:{\"columns\":_vm.tableColumns3,\"data\":_vm.tableData,\"highlightCurrentRow\":false,\"border\":true,\"stripe\":false,\"showIndex\":true,\"indexOptions\":{label: '序号', width: '60'},\"sumText\":\"统计\",\"showSummary\":true,\"needSummaryIndex\":[2],\"cellStyle\":_vm.setCellStyle,\"headerStyle\":_vm.setHeaderStyle,\"selection\":true},on:{\"current-change\":(currentRow) => { _vm.selectedRow = currentRow },\"select\":_vm.select,\"select-all\":_vm.selectAll,\"row-dblclick\":_vm.dblclick}})],1),_c('v-md-editor',{staticClass:\"github-markdown-body\",attrs:{\"value\":_vm.text4,\"mode\":\"preview\"}}),_c('div',{staticClass:\"demo-content\"},[_c('h4',[_vm._v(\"页面效果4\")]),_c('easy-table',{attrs:{\"stripe\":false,\"pageTotal\":2000,\"columns\":_vm.tableColumns,\"data\":_vm.tableData2,\"showLoadMore\":true},on:{\"load-more\":_vm.loadMore}})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\n  div\n    v-md-editor.github-markdown-body(:value=\"text\" mode=\"preview\")\n    div.demo-content\n      h4 页面效果1\n      easy-table(\n        :columns=\"tableColumns\"\n        :data=\"tableData\"\n      )\n          template(v-slot:eeHeader)\n            el-select( v-model=\"value\" placeholder=\"请选择\" size=\"mini\")\n              el-option(label=\"12345\" value=\"12345\" )\n    v-md-editor.github-markdown-body(:value=\"text2\" mode=\"preview\")\n    div.demo-content\n      h4 页面效果2\n      easy-table(\n        :columns=\"tableColumns\"\n        :data=\"tableData\"\n        :tableLoading=\"true\"\n      )\n    v-md-editor.github-markdown-body(:value=\"text3\" mode=\"preview\")\n    div.demo-content\n      h4 页面效果3\n      easy-table(\n        :columns=\"tableColumns3\"\n        :data=\"tableData\"\n        :highlightCurrentRow=\"false\"\n        :border=\"true\"\n        :stripe=\"false\"\n        :showIndex=\"true\"\n        :indexOptions=\"{label: '序号', width: '60'}\"\n        sumText=\"统计\"\n        :showSummary=\"true\"\n        :needSummaryIndex=\"[2]\"\n        :cellStyle=\"setCellStyle\"\n        :headerStyle=\"setHeaderStyle\"\n        @current-change=\"(currentRow) => { selectedRow = currentRow }\"\n        :selection=\"true\"\n        @select=\"select\"\n        @select-all=\"selectAll\"\n        @row-dblclick=\"dblclick\"\n      )\n    v-md-editor.github-markdown-body(:value=\"text4\" mode=\"preview\")\n    div.demo-content\n      h4 页面效果4\n      easy-table(\n        :stripe=\"false\"\n        :pageTotal=\"2000\"\n        :columns=\"tableColumns\"\n        :data=\"tableData2\"\n        :showLoadMore=\"true\"\n        @load-more=\"loadMore\"\n      )\n</template>\n\n<script>\nimport easyTable from \"@/components/easyTable/EasyTable\";\n\nexport default {\n  components: {\n    easyTable,\n  },\n  data() {\n    return {\n      value:'',\n      text: `\n  ### 分页表格\n  #### easy-table基础用法\n  - \\`data\\`：表格数据，对象数组格式，\\`必须属性\\`\n  - \\`columns\\`：表格字段，对象数组格式，\\`必须属性\\`\n  ##### columns内对象属性和方法\n  - \\`name\\`：获取数据的接口字段。字符串\n  - \\`title\\`：表头展示的字段。字符串\n  - \\`sortable\\`：是否可排序。布尔值默认false\n  - \\`fixed\\`：是否固定在左侧或者右测。字符串可选值\\`left/right\\`，默认不设置\n  - \\`showOverflowTooltip\\`：在单元格内容过长时候显示\\`...\\`，鼠标悬浮显示Tooltip\n  - \\`align\\`：列表数据文案位置，字符串默认'left'，可选值：\\`left/center/right\\`\n  - \\`headerAlign\\`：表头文案位置，字符串默认'left'，可选值：\\`left/center/right\\`\n  - \\`show\\`：列是否显示，使用场景：有相似的页面列表，只是增减了某个列，通过这个属性可以复用。function或者布尔值\n  - \\`formatter\\`：自定义展示内容。前三个入参row, cell, value分别是当前行对象，当前格对象，当前格数值。function\n  - \\`buttons\\`：操作列，提供交互操作。对象数组\n  > **buttons**对象属性如下\n  > \\`name\\`：交互按钮名称，字符串\n  > \\`click\\`：点击触发方法，两个方法入参，第一个是index，第二个是当前行row数据。function\n  > \\`show\\`：是否显示操作按钮，入参row当前行数据。function\n  - \\`type\\`：自定义单元格类型，可选值：\\`label/operate\\`\n  - \\`labels/buttons\\`：type为label时候。可设置是否自定义单元格内容。对象数组类型，可选值：\\`labels/buttons\\`\n  > **labels**对象属性如下\n  > \\`name\\`：单元格内容，字符串\n  > \\`show\\`：是否展示当前tab。function，方法返回row为当前行\n  > \\`tag\\`：返回tag颜色类型。function，方法返回row为当前行，return可选值为\\`success/info/warning/danger\\`\n\n  > **buttons**对象属性如下\n  > \\`show\\`：是否展示当前单元格。function，方法返回row为当前行\n  > \\`click\\`：点击单元格触发方法，两个方法入参，第一个是index，第二个是当前行row数据。function\n  - \\`buttons\\`：type为operate时候。可设置是否自定义单元格内容。对象数组类型，可选值：\\`buttons\\`\n  > **buttons**对象属性如下\n  > 使用方式同type为label时的buttons设置\n\n  ##### 示例代码1\n  \\`\\`\\`pug\n  easy-table(\n    :columns=\"tableColumns\"\n    :data=\"tableData\"\n  )\n  // js\n  // 数据\n  tableData: [\n    {\n      aa: '如果超人不会飞',\n      bb: 100,\n      cc: 1,\n      dd: 1,\n      ee: 12345,\n    }, {\n      aa: '如果超人不会飞2+如果超人不会飞2+如果超人不会飞2+如果超人不会飞2+如果超人不会飞2+如果超人不会飞2+如果超人不会飞2',\n      bb: 200,\n      cc: 1,\n      dd: 0,\n      cee: 1234567,\n    },\n  ],\n  // 列声明\n  tableColumns: [\n    {\n      name: 'aa',\n      title: '字段1',\n      sortable: true,\n    },\n    {\n      name: 'ee',\n      title: 'ID',\n      type: 'label',\n      buttons: [\n        {\n          show: (row) => {\n            return row.ee === 12345;\n          },\n          click: this.clickId.bind(this),\n        }\n      ],\n      formatter: (row, cell, value) => {\n        return row.ee;\n      }\n    },\n    {\n      title: '类型',\n      type: 'label',\n      labels: [\n        {\n          name: '成功',\n          show: (row) => {\n            return row.dd === 1;\n          },\n          tag: (row, column) => {\n            if (row.dd === 1) {\n              return 'success';\n            }\n          }\n        }, {\n          name: '失败',\n          show: (row) => {\n            return row.dd === 0;\n          },\n          tag: (row, column) => {\n            if (row.dd === 0) {\n              return 'danger';\n            }\n          }\n        }\n      ],\n    },\n    {\n      name: 'bb',\n      title: '字段2',\n      show: () => {\n        return false;\n      },\n    },\n    {\n      name: 'cc',\n      title: '字段3',\n      formatter: (row, cell, value) => {\n        let dic = {\n          0: '申请中',\n          1: '通过'\n        };\n        console.log(cell)\n        return dic[value];\n      }\n    },\n    {\n      title: '操作',\n      type: 'operate',\n      width: '150',\n      fixed: 'right',\n      align: 'center',\n      headerAlign: 'center',\n      buttons: [\n        {\n          name: '详情',\n          click: this.doHandle.bind(this),\n          show: (row) => {\n            return row.cc == 1;\n          }\n        },\n      ]\n    }\n  ],\n  methods: {\n    doHandle(index, row) {\n      console.log('index', index);\n      console.log('row', row);\n    },\n    clickId(index, row) {\n      console.log('index', index);\n      console.log('row', row);\n    },\n  }\n  \\`\\`\\`\n      `,\n      text2: `\n  #### 加载状态\n  - \\`tableLoading\\`：加载状态，布尔值默认false\n  ##### 示例代码2\n  \\`\\`\\`pug\n  easy-table(\n    :columns=\"tableColumns\"\n    :data=\"tableData\"\n    :tableLoading=\"true\"\n  )\n  \\`\\`\\`\n      `,\n      text3: `\n  #### easy-table属性和方法\n  - \\`highlightCurrentRow\\`：是否高亮当前选中行，布尔值默认true\n  - \\`border\\`：表格样式，格子样式，布尔值默认false\n  - \\`stripe\\`：是否显示斑马纹，布尔值默认true\n  - \\`showIndex\\`：是否显示序列号，布尔值默认false\n  - \\`showSummary\\`：是否显示合计，布尔值默认false\n  - \\`sumText\\`：合计的字符串名称，字符串默认'合计'\n  - \\`needSummaryIndex\\`：需要合计的下标数组，列数据是Number才合计，数组\n  - \\`cellStyle\\`：设置单元格或者一行的单元格样式。function，返回样式字符串\n  - \\`headerStyle\\`：设置表头单元格样式，使用方式同cellStyle\n  - \\`@current-change\\`：选中当前行时触发。方法如参返回当前行row\n  - \\`selection\\`：是否显示勾选栏，布尔值默认false\n  - \\`@select\\`：单选触发，函数返回一个对象数组，单选，入参返回有一个对象的数组\n  - \\`@select-all\\`：多选触发，函数返回一个对象数组，多选，入参返回有多个对象的数组\n  - \\`@row-dblclick\\`：双击表格行，返回当前行数据\n  - \\`indexOptions\\`：序号列设置，label可自定义设置，默认字符'#'；width可自定义设置，默认宽度50。对象类型\n  ##### 示例代码3\n  \\`\\`\\`pug\n  easy-table(\n    :columns=\"tableColumns3\"\n    :data=\"tableData\"\n    :border=\"true\"\n    :stripe=\"false\"\n    :showIndex=\"true\"\n    :indexOptions=\"{label: '序号', width: '60'}\"\n    sumText=\"统计\"\n    :showSummary=\"true\"\n    :needSummaryIndex=\"[2]\"\n    :cellStyle=\"setCellStyle\"\n    :headerStyle=\"setHeaderStyle\"\n    @current-change=\"(currentRow) => { selectedRow = currentRow }\"\n    :selection=\"true\"\n    @select=\"select\"\n    @select-all=\"selectAll\"\n    @row-dblclick=\"dblclick\"\n  )\n  // js\n   data() {\n    return {\n      selectedRow: null,\n      tableColumns3: [\n        {\n          name: 'aa',\n          title: '字段1',\n        },\n        {\n          name: 'bb',\n          title: '字段2',\n          sortable: true,\n          show: () => {\n            return true;\n          },\n        },\n        {\n          name: 'cc',\n          title: '字段3',\n          formatter: (row, cell, value) => {\n            let dic = {\n              0: '申请中',\n              1: '通过'\n            };\n            return dic[value];\n          }\n        },\n        {\n          title: '操作',\n          type: 'operate',\n          width: '150',\n          buttons: [\n            {\n              name: '详情',\n              click: this.doHandle.bind(this),\n              show: (row) => {\n                return row.cc == 1;\n              }\n            },\n          ]\n        }\n      ],\n    }\n  }\n  methods: {\n    setCellStyle(obj) {\n      // row行数据，rowIndex行下标，column列对象，columnIndex列下标\n      console.log('obj',obj);\n      if (obj.row.bb > 100 && obj.columnIndex === 2) {\n        return 'color: red';\n      }\n    },\n    select(rows) {\n      console.log(rows);\n    },\n    selectAll(rows) {\n      console.log('全选', rows);\n    },\n    dblclick(row, column, event) {\n      console.log('row', row);\n      console.log('column', column);\n      console.log('event', event);\n    },\n  }\n  \\`\\`\\`\n      `,\n      text4: `\n  #### 分页用法\n  这里分页，采取前端分页逻辑，即\\`约定\\`一次性查询 \\`200 \\`条数据，由前端处理，根据每页几条，分出有几页。当需要200条之后的数据，需要设置\\`更多\\`按钮，\n  每次点击\\`更多\\`，查询200条叠加到之前的表格数据数组。\n  - \\`pageTotal\\`：表格数据合计，Number默认0。若0显示当前data数组长度的数据量。部分场景要求知道总数据量，但实际前端只查询200条，这时可以单独设置pageTotal\n  - \\`showPagination\\`：是否强制显示分页栏。布尔值默认false。分页栏默认当数据不满一页时，不显示分页栏\n  - \\`pageSize\\`：每页几条数据。Number默认10\n  - \\`showLoadMore\\`：是否显示更多按钮。布尔值默认false\n  - \\`@load-more\\`：点击更多按钮触发方法。方法处理date数据，拼接数组如：this.tableData.concat(resp.data);\n  ##### 示例代码4\n  \\`\\`\\`pug\n  easy-table(\n    :stripe=\"false\"\n    :pageTotal=\"2000\"\n    :columns=\"tableColumns\"\n    :data=\"tableData2\"\n    :showLoadMore=\"true\"\n    @load-more=\"loadMore\"\n  )\n  // js\n  loadMore() {\n    // 处理表格数据逻辑，类似例如\n    // let page = this.tableData.length / 200;\n    // let data = {...this.formData};\n    // data.pageIndex = page;\n    // this.loading = true;\n    // commonInterface(data).then((resp) => {\n    //   this.loading = false;\n    //   this.tableData = this.tableData.concat(resp.data);\n    // }).catch(() => {\n    //   this.loading = false;\n    // });\n  },\n  \\`\\`\\`\n      `,\n      selectedRow: null,\n      tableColumns: [\n        {\n          name: 'aa',\n          title: '字段1',\n          sortable: true,\n          showOverflowTooltip: true,\n        },\n        {\n          name: 'ee',\n          title: 'ID',\n          headerSoltName:'eeHeader',\n          type: 'label',\n          buttons: [\n            {\n              show: (row) => {\n                return row.ee === 12345;\n              },\n              click: this.clickId.bind(this),\n            }\n          ],\n          formatter: (row, cell, value) => {\n            return row.ee;\n          }\n        },\n        {\n          // name: 'dd',\n          title: '类型',\n          type: 'label',\n          labels: [\n            {\n              name: '成功',\n              show: (row) => {\n                return row.dd === 1;\n              },\n              tag: (row, column) => {\n                if (row.dd === 1) {\n                  return 'success';\n                }\n              }\n            }, {\n              name: '失败',\n              show: (row) => {\n                return row.dd === 0;\n              },\n              tag: (row, column) => {\n                if (row.dd === 0) {\n                  return 'danger';\n                }\n              }\n            },\n          ],\n        },\n        {\n          name: 'bb',\n          title: '字段2',\n          show: () => {\n            return false;\n          },\n        },\n        {\n          name: 'cc',\n          title: '字段3',\n          formatter: (row, cell, value) => {\n            let dic = {\n              0: '申请中',\n              1: '通过'\n            };\n            return dic[value];\n          }\n        },\n        {\n          title: '操作',\n          type: 'operate',\n          width: '150',\n          fixed: 'right',\n          align: 'center',\n          headerAlign: 'center',\n          buttons: [\n            {\n              name: '详情',\n              click: this.doHandle.bind(this),\n              show: (row) => {\n                return row.cc == 1;\n              }\n            },\n          ]\n        }\n      ],\n      tableColumns3: [\n        {\n          name: 'aa',\n          title: '字段1',\n        },\n        {\n          name: 'bb',\n          title: '字段2',\n          sortable: true,\n          show: () => {\n            return true;\n          },\n        },\n        {\n          name: 'cc',\n          title: '字段3',\n          formatter: (row, cell, value) => {\n            let dic = {\n              0: '申请中',\n              1: '通过'\n            };\n            return dic[value];\n          }\n        },\n        {\n          title: '操作',\n          type: 'operate',\n          width: '150',\n          buttons: [\n            {\n              name: '详情',\n              click: this.doHandle.bind(this),\n              show: (row) => {\n                return row.cc == 1;\n              }\n            },\n          ]\n        }\n      ],\n      tableColumns2: [\n        {\n          name: 'aa',\n          title: '字段1',\n          show: true\n        },\n        {\n          name: 'bb',\n          title: '字段2',\n          show: () => {\n            return 1 > 0\n          },\n          formatter: (row, cell, value) => {\n            return value\n          }\n        },\n        {\n          name: 'cc',\n          title: '字段3',\n          formatter: (row, cell, value) => {\n            let dic = {\n              0: '申请中',\n              1: '通过'\n            };\n            return dic[value];\n          }\n        },\n        {\n          title: '操作',\n          type: 'operate',\n          width: '150',\n          buttons: [\n            {\n              name: '详情',\n              click: this.doHandle.bind(this),\n              show: (row) => {\n                return row.cc == 1;\n              }\n            },\n          ]\n        }\n      ],\n      tableData: [\n        {\n          aa: '如果超人不会飞',\n          bb: 100,\n          cc: 1,\n          dd: 1,\n          ee: 12345,\n        }, {\n          aa: '如果超人不会飞2+如果超人不会飞2+如果超人不会飞2+如果超人不会飞2+如果超人不会飞2+如果超人不会飞2+如果超人不会飞2',\n          bb: 200,\n          cc: 1,\n          dd: 0,\n          cee: 1234567,\n        },\n      ],\n      tableData2: [],\n    };\n  },\n  methods: {\n    setCellStyle(obj) {\n      // row行数据，rowIndex行下标，column列对象，columnIndex列下标\n      // console.log('obj',obj);\n      if (obj.row.bb > 100 && obj.columnIndex === 2) {\n        return 'color: red';\n      }\n    },\n    setHeaderStyle(obj) {\n      // row行数据，rowIndex行下标，column列对象，columnIndex列下标\n      if (obj.columnIndex === 2) {\n        return 'color: red';\n      }\n    },\n    select(rows) {\n      console.log(rows);\n    },\n    selectAll(rows) {\n      console.log('全选', rows);\n    },\n    dblclick(row, column, event) {\n      console.log('row', row);\n      console.log('column', column);\n      console.log('event', event);\n    },\n    search() {},\n    reset() {\n      this.formData = {};\n    },\n    doHandle(index, row) {\n      console.log('index', index);\n      console.log('row', row);\n    },\n    clickId(index, row) {\n      console.log('index', index);\n      console.log('row', row);\n    },\n    loadMore() {\n      // 处理表格数据逻辑，类似例如\n      // let page = this.tableData.length / 200;\n      // let data = {...this.formData};\n      // data.pageIndex = page;\n      // this.loading = true;\n      // commonInterface(data).then((resp) => {\n      //   this.loading = false;\n      //   this.tableData = this.tableData.concat(resp.data);\n      // }).catch(() => {\n      //   this.loading = false;\n      // });\n    },\n  },\n  created() {\n    for (let i = 0; i <1200 ; i++) {\n      this.tableData2.push({\n        aa: '如果超人不会飞'+i,\n        bb: '如果如果超人不会飞如果超'+i,\n        cc: 0,\n      })\n    }\n    this.tableData2 = this.tableData2.concat(this.tableData).reverse();\n  }\n}\n</script>\n\n<style scoped>\n/deep/ .github-markdown-body {\n  padding: 12px 16px 0px;\n}\n.demo-content {\n  border: 1px solid rgba(244,244,244, 0.9);\n  padding: 12px 40px 24px;\n  margin-bottom: 12px;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./easyTableDemo.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./easyTableDemo.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./easyTableDemo.vue?vue&type=template&id=4cd342e2&scoped=true&lang=pug&\"\nimport script from \"./easyTableDemo.vue?vue&type=script&lang=js&\"\nexport * from \"./easyTableDemo.vue?vue&type=script&lang=js&\"\nimport style0 from \"./easyTableDemo.vue?vue&type=style&index=0&id=4cd342e2&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4cd342e2\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./easyTableDemo.vue?vue&type=style&index=0&id=4cd342e2&prod&scoped=true&lang=css&\""],"sourceRoot":""}