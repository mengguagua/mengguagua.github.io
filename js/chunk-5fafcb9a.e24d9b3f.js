(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-5fafcb9a","chunk-5e7d7035","chunk-6ea41896","chunk-49c8e064","chunk-5627279b","chunk-789756cc","chunk-2ba129ec"],{"023b":function(n,t,e){},"0416":function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",[t("v-md-editor",{staticClass:"github-markdown-body",attrs:{value:n.text,mode:"preview"}}),t("div",{staticClass:"demo-content"},[t("RollingDynamic",{staticClass:"rolling",attrs:{data:n.financingData,showNum:6,cacheLength:15,isScroll:!0},scopedSlots:n._u([{key:"title",fn:function(){return[t("p",{staticClass:"rolling_title"},[n._v("融资动态")])]},proxy:!0},{key:"list",fn:function(e){return[t("p",{staticClass:"rolling_item"},[t("span",[n._v(n._s(e.data.company)+" 在")]),t("span",[n._v(n._s(e.data.date)+" 申请了")]),t("span",[n._v(n._s(e.data.product))])])]}}])})],1),t("v-md-editor",{staticClass:"github-markdown-body",attrs:{value:n.text2,mode:"preview"}}),t("div",{staticClass:"demo-content"},[t("RollingDynamic",{staticClass:"rolling",attrs:{data:n.financingData,showNum:6,cacheLength:6},scopedSlots:n._u([{key:"title",fn:function(){return[t("p",{staticClass:"rolling_title"},[n._v("融资动态")])]},proxy:!0},{key:"list",fn:function(e){return[t("p",{staticClass:"rolling_item"},[t("span",[n._v(n._s(e.data.company))]),n._v(" 在 "),t("span",[n._v(n._s(e.data.date))]),n._v(" 申请了 "),t("span",[n._v(n._s(e.data.product))])])]}}])})],1)],1)},o=[],l=e("08cf"),s={components:{easyTable:l["default"]},data:function(){return{financingData:[{company:"杭州****公司1",product:"中国银行xxx产品",date:"08月10日"},{company:"杭州****公司2",product:"中国银行xxx产品",date:"08月10日"},{company:"杭州****公司3",product:"中国银行xxx产品",date:"08月10日"},{company:"杭州****公司4",product:"中国银行xxx产品",date:"08月10日"},{company:"杭州****公司5",product:"中国银行xxx产品",date:"08月10日"},{company:"杭州****公司6",product:"中国银行xxx产品",date:"08月10日"},{company:"杭州****公司7",product:"中国银行xxx产品",date:"08月10日"}],text:'\n  ### 滚动效果表格\n  #### RollingDynamic基础用法\n  - 使用场景：部分业务场景用到滚动效果，如大屏滚动表格，门户滚动新闻等。`RollingDynamic`可以满足这类需求\n  - `data`：数据源，对象数组\n  - `v-slot:title`：自定义标题\n  - `v-slot:list=\'item\'`：自定义行内容\n  - `isScroll`：滚动开关，默认true\n  - `isCache`：缓存滚动数据，默认true，重新赋值滚动列表data默认会添加到尾部。若希望取最新到赋值，刷新列表设置false\n  - `showNum`：显示几行数据，默认展示`6`行数据\n  - `cacheLength`：滚动数据缓存，默认`15`行数据\n  > `v-slot:list=\'item\'`插槽对应数组内对象，通过`item.data`取到对象数据。\n\n  > 滚动数据缓存的使用场景：滚动内容是一个数组，而这个数据是由接口定时查询得到的最新数据，当接口返回最新数据是少量时，如2条，滚动内容只有2条，不符合期望。通过`cacheLength`避免这类问题，由它指定实际滚动数据，滚动内容总数据为指定数量，如默认值15\n\n  #### 示例\n  ```pug\n  RollingDynamic.rolling(:data="financingData" :showNum="6" :cacheLength="15" :isScroll="true")\n  \ttemplate(v-slot:title)\n  \t\tp.rolling_title 融资动态\n  \ttemplate(v-slot:list=\'item\')\n  \t\tp.rolling_item\n  \t\t\tspan {{item.data.company}} 在\n  \t\t\tspan {{item.data.date}} 申请了\n  \t\t\tspan {{item.data.product}}\n  ```\n  ```vue\n  data() {\n    return {\n      financingData: [\n        { company: \'杭州****公司1\', product: "中国银行xxx产品", date: "08月10日" },\n        { company: \'杭州****公司2\', product: "中国银行xxx产品", date: "08月10日" },\n        { company: \'杭州****公司3\', product: "中国银行xxx产品", date: "08月10日" },\n        { company: \'杭州****公司4\', product: "中国银行xxx产品", date: "08月10日" },\n        { company: \'杭州****公司5\', product: "中国银行xxx产品", date: "08月10日" },\n        { company: \'杭州****公司6\', product: "中国银行xxx产品", date: "08月10日" },\n        { company: \'杭州****公司7\', product: "中国银行xxx产品", date: "08月10日" },\n      ],\n    }\n  }\n  mounted() {\n    setTimeout(() => {\n      this.financingData = [\n        { company: \'杭州****公司8\', product: "中国银行xxx产品", date: "08月10日" },\n        { company: \'杭州****公司9\', product: "中国银行xxx产品", date: "08月10日" },\n        { company: \'杭州****公司10\', product: "中国银行xxx产品", date: "08月10日" },\n        { company: \'杭州****公司11\', product: "中国银行xxx产品", date: "08月10日" },\n        { company: \'杭州****公司12\', product: "中国银行xxx产品", date: "08月10日" },\n      ]\n      console.log(\'更新动态列表项\')\n    },6000)\n  }\n  // css\n  .rolling {\n    padding: 20px;\n  }\n  .rolling_title {\n    margin-bottom: 12px;\n    font-size: 20px;\n    font-weight: 600;\n    text-align: center;\n  }\n  .rolling_item {\n    text-align: left;\n    font-size: 14px;\n  }\n  .rolling_item span {\n    color: #657cc4;\n  }\n  ```\n  - showNum < cacheLength 时，数据轮完，从头轮最大cacheLength长度的旧数据，新数据加入后直接插入立即出现\n      ',text2:'\n  #### 示例\n  - showNum = cacheLength 时，数据轮完停止，直到新数据加入后继续轮\n  ```\n  RollingDynamic.rolling(:data="financingData" :showNum="6" :cacheLength="6")\n    template(v-slot:title)\n      p.rolling_title 融资动态\n    template(v-slot:list=\'item\')\n      p.rolling_item <span>{{item.data.company}}</span> 在 <span>{{item.data.date}}</span> 申请了 <span>{{item.data.product}}</span>\n  ```\n      '}},methods:{search:function(){}},mounted:function(){var n=this;setTimeout((function(){n.financingData=[{company:"杭州****公司8",product:"中国银行xxx产品",date:"08月10日"},{company:"杭州****公司9",product:"中国银行xxx产品",date:"08月10日"},{company:"杭州****公司10",product:"中国银行xxx产品",date:"08月10日"},{company:"杭州****公司11",product:"中国银行xxx产品",date:"08月10日"},{company:"杭州****公司12",product:"中国银行xxx产品",date:"08月10日"}],console.log("更新动态列表项")}),6e3)}},r=s,i=(e("1b14"),e("2877")),c=Object(i["a"])(r,a,o,!1,null,"42eedafc",null);t["default"]=c.exports},"129f":function(n,t){n.exports=Object.is||function(n,t){return n===t?0!==n||1/n===1/t:n!=n&&t!=t}},"1b14":function(n,t,e){"use strict";e("ff86")},"348f":function(n,t,e){"use strict";e("3542")},3542:function(n,t,e){},"3de0":function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",[t("v-md-editor",{staticClass:"github-markdown-body",attrs:{value:n.text,mode:"preview"}}),t("div",{staticClass:"demo-content"},[t("descriptionsTable",{attrs:{data:n.dTable,span:12},scopedSlots:n._u([{key:"label",fn:function(){return[t("span",[n._v("附件")])]},proxy:!0},{key:"value",fn:function(){return[t("span",{staticClass:"file-text"},[n._v("附件1   附件2  ")])]},proxy:!0}])})],1)],1)},o=[],l=e("a53b"),s={components:{descriptionsTable:l["default"]},data:function(){return{dTable:[{label:"字段1",value:"111"},{label:"字段2",value:"222"},{label:"字段3",value:"333"},{label:"字段4",value:"444"}],text:"\n  ### 描述性表格\n  #### DescriptionsTable基础用法\n  - `dTable`：基础用法只有数据一项要求，格式要符合数组对象，对象属性为`label`和`value`。\n  - `span`：栅格，一行24格，默认值6，即label-value 4组。\n  - `v-slot:label`和`v-slot:value`：自定义列，部分业务需要附件等交互操作\n  #### 示例\n  ```pug\n  descriptionsTable(:data=\"dTable\" :span=\"12\")\n    template(v-slot:label)\n      span 附件\n    template(v-slot:value)\n      span.file-text 附件1 &nbsp; 附件2 &nbsp;\n  ```\n  ```vue\n  data() {\n    return {\n      dTable: [\n        {\n          label: '字段1',\n          value: '111',\n        }, {\n          label: '字段2',\n          value: '222',\n        }, {\n          label: '字段3',\n          value: '333',\n        }, {\n          label: '字段4',\n          value: '444',\n        }\n      ],\n    }\n  }\n  ```\n      "}},methods:{}},r=s,i=(e("a0a1"),e("2877")),c=Object(i["a"])(r,a,o,!1,null,"381aa8e0",null);t["default"]=c.exports},"427d":function(n,t,e){},"74d7":function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",[t("v-md-editor",{staticClass:"github-markdown-body",attrs:{value:n.text,mode:"preview"}}),t("div",{staticClass:"demo-content"},[t("h4",[n._v("页面效果1")]),t("easy-table",{attrs:{columns:n.tableColumns,data:n.tableData},scopedSlots:n._u([{key:"eeHeader",fn:function(){return[t("el-select",{attrs:{placeholder:"请选择",size:"mini"},model:{value:n.value,callback:function(t){n.value=t},expression:"value"}},[t("el-option",{attrs:{label:"12345",value:"12345"}})],1)]},proxy:!0}])})],1),t("v-md-editor",{staticClass:"github-markdown-body",attrs:{value:n.text2,mode:"preview"}}),t("div",{staticClass:"demo-content"},[t("h4",[n._v("页面效果2")]),t("easy-table",{attrs:{columns:n.tableColumns,data:n.tableData,tableLoading:!0}})],1),t("v-md-editor",{staticClass:"github-markdown-body",attrs:{value:n.text3,mode:"preview"}}),t("div",{staticClass:"demo-content"},[t("h4",[n._v("页面效果3")]),t("easy-table",{attrs:{columns:n.tableColumns3,data:n.tableData,highlightCurrentRow:!1,border:!0,stripe:!1,showIndex:!0,indexOptions:{label:"序号",width:"60"},sumText:"统计",showSummary:!0,needSummaryIndex:[2],cellStyle:n.setCellStyle,headerStyle:n.setHeaderStyle,selection:!0},on:{"current-change":function(t){n.selectedRow=t},select:n.select,"select-all":n.selectAll,"row-dblclick":n.dblclick}})],1),t("v-md-editor",{staticClass:"github-markdown-body",attrs:{value:n.text4,mode:"preview"}}),t("div",{staticClass:"demo-content"},[t("h4",[n._v("页面效果4")]),t("easy-table",{attrs:{stripe:!1,pageTotal:2e3,columns:n.tableColumns,data:n.tableData2,showLoadMore:!0},on:{"load-more":n.loadMore}})],1)],1)},o=[],l=(e("14d9"),e("99af"),e("08cf")),s={components:{easyTable:l["default"]},data:function(){return{value:"",text:"\n  ### 分页表格\n  #### easy-table基础用法\n  - `data`：表格数据，对象数组格式，`必须属性`\n  - `columns`：表格字段，对象数组格式，`必须属性`\n  ##### columns内对象属性和方法\n  - `name`：获取数据的接口字段。字符串\n  - `title`：表头展示的字段。字符串\n  - `sortable`：是否可排序。布尔值默认false\n  - `fixed`：是否固定在左侧或者右测。字符串可选值`left/right`，默认不设置\n  - `showOverflowTooltip`：在单元格内容过长时候显示`...`，鼠标悬浮显示Tooltip\n  - `align`：列表数据文案位置，字符串默认'left'，可选值：`left/center/right`\n  - `headerAlign`：表头文案位置，字符串默认'left'，可选值：`left/center/right`\n  - `show`：列是否显示，使用场景：有相似的页面列表，只是增减了某个列，通过这个属性可以复用。function或者布尔值\n  - `formatter`：自定义展示内容。前三个入参row, cell, value分别是当前行对象，当前格对象，当前格数值。function\n  - `buttons`：操作列，提供交互操作。对象数组\n  > **buttons**对象属性如下\n  > `name`：交互按钮名称，字符串\n  > `click`：点击触发方法，两个方法入参，第一个是index，第二个是当前行row数据。function\n  > `show`：是否显示操作按钮，入参row当前行数据。function\n  - `type`：自定义单元格类型，可选值：`label/operate`\n  - `labels/buttons`：type为label时候。可设置是否自定义单元格内容。对象数组类型，可选值：`labels/buttons`\n  > **labels**对象属性如下\n  > `name`：单元格内容，字符串\n  > `show`：是否展示当前tab。function，方法返回row为当前行\n  > `tag`：返回tag颜色类型。function，方法返回row为当前行，return可选值为`success/info/warning/danger`\n\n  > **buttons**对象属性如下\n  > `show`：是否展示当前单元格。function，方法返回row为当前行\n  > `click`：点击单元格触发方法，两个方法入参，第一个是index，第二个是当前行row数据。function\n  - `buttons`：type为operate时候。可设置是否自定义单元格内容。对象数组类型，可选值：`buttons`\n  > **buttons**对象属性如下\n  > 使用方式同type为label时的buttons设置\n\n  ##### 示例代码1\n  ```pug\n  easy-table(\n    :columns=\"tableColumns\"\n    :data=\"tableData\"\n  )\n  // js\n  // 数据\n  tableData: [\n    {\n      aa: '如果超人不会飞',\n      bb: 100,\n      cc: 1,\n      dd: 1,\n      ee: 12345,\n    }, {\n      aa: '如果超人不会飞2+如果超人不会飞2+如果超人不会飞2+如果超人不会飞2+如果超人不会飞2+如果超人不会飞2+如果超人不会飞2',\n      bb: 200,\n      cc: 1,\n      dd: 0,\n      cee: 1234567,\n    },\n  ],\n  // 列声明\n  tableColumns: [\n    {\n      name: 'aa',\n      title: '字段1',\n      sortable: true,\n    },\n    {\n      name: 'ee',\n      title: 'ID',\n      type: 'label',\n      buttons: [\n        {\n          show: (row) => {\n            return row.ee === 12345;\n          },\n          click: this.clickId.bind(this),\n        }\n      ],\n      formatter: (row, cell, value) => {\n        return row.ee;\n      }\n    },\n    {\n      title: '类型',\n      type: 'label',\n      labels: [\n        {\n          name: '成功',\n          show: (row) => {\n            return row.dd === 1;\n          },\n          tag: (row, column) => {\n            if (row.dd === 1) {\n              return 'success';\n            }\n          }\n        }, {\n          name: '失败',\n          show: (row) => {\n            return row.dd === 0;\n          },\n          tag: (row, column) => {\n            if (row.dd === 0) {\n              return 'danger';\n            }\n          }\n        }\n      ],\n    },\n    {\n      name: 'bb',\n      title: '字段2',\n      show: () => {\n        return false;\n      },\n    },\n    {\n      name: 'cc',\n      title: '字段3',\n      formatter: (row, cell, value) => {\n        let dic = {\n          0: '申请中',\n          1: '通过'\n        };\n        console.log(cell)\n        return dic[value];\n      }\n    },\n    {\n      title: '操作',\n      type: 'operate',\n      width: '150',\n      fixed: 'right',\n      align: 'center',\n      headerAlign: 'center',\n      buttons: [\n        {\n          name: '详情',\n          click: this.doHandle.bind(this),\n          show: (row) => {\n            return row.cc == 1;\n          }\n        },\n      ]\n    }\n  ],\n  methods: {\n    doHandle(index, row) {\n      console.log('index', index);\n      console.log('row', row);\n    },\n    clickId(index, row) {\n      console.log('index', index);\n      console.log('row', row);\n    },\n  }\n  ```\n      ",text2:'\n  #### 加载状态\n  - `tableLoading`：加载状态，布尔值默认false\n  ##### 示例代码2\n  ```pug\n  easy-table(\n    :columns="tableColumns"\n    :data="tableData"\n    :tableLoading="true"\n  )\n  ```\n      ',text3:"\n  #### easy-table属性和方法\n  - `highlightCurrentRow`：是否高亮当前选中行，布尔值默认true\n  - `border`：表格样式，格子样式，布尔值默认false\n  - `stripe`：是否显示斑马纹，布尔值默认true\n  - `showIndex`：是否显示序列号，布尔值默认false\n  - `showSummary`：是否显示合计，布尔值默认false\n  - `sumText`：合计的字符串名称，字符串默认'合计'\n  - `needSummaryIndex`：需要合计的下标数组，列数据是Number才合计，数组\n  - `cellStyle`：设置单元格或者一行的单元格样式。function，返回样式字符串\n  - `headerStyle`：设置表头单元格样式，使用方式同cellStyle\n  - `@current-change`：选中当前行时触发。方法如参返回当前行row\n  - `selection`：是否显示勾选栏，布尔值默认false\n  - `@select`：单选触发，函数返回一个对象数组，单选，入参返回有一个对象的数组\n  - `@select-all`：多选触发，函数返回一个对象数组，多选，入参返回有多个对象的数组\n  - `@row-dblclick`：双击表格行，返回当前行数据\n  - `indexOptions`：序号列设置，label可自定义设置，默认字符'#'；width可自定义设置，默认宽度50。对象类型\n  ##### 示例代码3\n  ```pug\n  easy-table(\n    :columns=\"tableColumns3\"\n    :data=\"tableData\"\n    :border=\"true\"\n    :stripe=\"false\"\n    :showIndex=\"true\"\n    :indexOptions=\"{label: '序号', width: '60'}\"\n    sumText=\"统计\"\n    :showSummary=\"true\"\n    :needSummaryIndex=\"[2]\"\n    :cellStyle=\"setCellStyle\"\n    :headerStyle=\"setHeaderStyle\"\n    @current-change=\"(currentRow) => { selectedRow = currentRow }\"\n    :selection=\"true\"\n    @select=\"select\"\n    @select-all=\"selectAll\"\n    @row-dblclick=\"dblclick\"\n  )\n  // js\n   data() {\n    return {\n      selectedRow: null,\n      tableColumns3: [\n        {\n          name: 'aa',\n          title: '字段1',\n        },\n        {\n          name: 'bb',\n          title: '字段2',\n          sortable: true,\n          show: () => {\n            return true;\n          },\n        },\n        {\n          name: 'cc',\n          title: '字段3',\n          formatter: (row, cell, value) => {\n            let dic = {\n              0: '申请中',\n              1: '通过'\n            };\n            return dic[value];\n          }\n        },\n        {\n          title: '操作',\n          type: 'operate',\n          width: '150',\n          buttons: [\n            {\n              name: '详情',\n              click: this.doHandle.bind(this),\n              show: (row) => {\n                return row.cc == 1;\n              }\n            },\n          ]\n        }\n      ],\n    }\n  }\n  methods: {\n    setCellStyle(obj) {\n      // row行数据，rowIndex行下标，column列对象，columnIndex列下标\n      console.log('obj',obj);\n      if (obj.row.bb > 100 && obj.columnIndex === 2) {\n        return 'color: red';\n      }\n    },\n    select(rows) {\n      console.log(rows);\n    },\n    selectAll(rows) {\n      console.log('全选', rows);\n    },\n    dblclick(row, column, event) {\n      console.log('row', row);\n      console.log('column', column);\n      console.log('event', event);\n    },\n  }\n  ```\n      ",text4:'\n  #### 分页用法\n  这里分页，采取前端分页逻辑，即`约定`一次性查询 `200 `条数据，由前端处理，根据每页几条，分出有几页。当需要200条之后的数据，需要设置`更多`按钮，\n  每次点击`更多`，查询200条叠加到之前的表格数据数组。\n  - `pageTotal`：表格数据合计，Number默认0。若0显示当前data数组长度的数据量。部分场景要求知道总数据量，但实际前端只查询200条，这时可以单独设置pageTotal\n  - `showPagination`：是否强制显示分页栏。布尔值默认false。分页栏默认当数据不满一页时，不显示分页栏\n  - `pageSize`：每页几条数据。Number默认10\n  - `showLoadMore`：是否显示更多按钮。布尔值默认false\n  - `@load-more`：点击更多按钮触发方法。方法处理date数据，拼接数组如：this.tableData.concat(resp.data);\n  ##### 示例代码4\n  ```pug\n  easy-table(\n    :stripe="false"\n    :pageTotal="2000"\n    :columns="tableColumns"\n    :data="tableData2"\n    :showLoadMore="true"\n    @load-more="loadMore"\n  )\n  // js\n  loadMore() {\n    // 处理表格数据逻辑，类似例如\n    // let page = this.tableData.length / 200;\n    // let data = {...this.formData};\n    // data.pageIndex = page;\n    // this.loading = true;\n    // commonInterface(data).then((resp) => {\n    //   this.loading = false;\n    //   this.tableData = this.tableData.concat(resp.data);\n    // }).catch(() => {\n    //   this.loading = false;\n    // });\n  },\n  ```\n      ',selectedRow:null,tableColumns:[{name:"aa",title:"字段1",sortable:!0,showOverflowTooltip:!0},{name:"ee",title:"ID",headerSoltName:"eeHeader",type:"label",buttons:[{show:function(n){return 12345===n.ee},click:this.clickId.bind(this)}],formatter:function(n,t,e){return n.ee}},{title:"类型",type:"label",labels:[{name:"成功",show:function(n){return 1===n.dd},tag:function(n,t){if(1===n.dd)return"success"}},{name:"失败",show:function(n){return 0===n.dd},tag:function(n,t){if(0===n.dd)return"danger"}}]},{name:"bb",title:"字段2",show:function(){return!1}},{name:"cc",title:"字段3",formatter:function(n,t,e){var a={0:"申请中",1:"通过"};return a[e]}},{title:"操作",type:"operate",width:"150",fixed:"right",align:"center",headerAlign:"center",buttons:[{name:"详情",click:this.doHandle.bind(this),show:function(n){return 1==n.cc}}]}],tableColumns3:[{name:"aa",title:"字段1"},{name:"bb",title:"字段2",sortable:!0,show:function(){return!0}},{name:"cc",title:"字段3",formatter:function(n,t,e){var a={0:"申请中",1:"通过"};return a[e]}},{title:"操作",type:"operate",width:"150",buttons:[{name:"详情",click:this.doHandle.bind(this),show:function(n){return 1==n.cc}}]}],tableColumns2:[{name:"aa",title:"字段1",show:!0},{name:"bb",title:"字段2",show:function(){return!0},formatter:function(n,t,e){return e}},{name:"cc",title:"字段3",formatter:function(n,t,e){var a={0:"申请中",1:"通过"};return a[e]}},{title:"操作",type:"operate",width:"150",buttons:[{name:"详情",click:this.doHandle.bind(this),show:function(n){return 1==n.cc}}]}],tableData:[{aa:"如果超人不会飞",bb:100,cc:1,dd:1,ee:12345},{aa:"如果超人不会飞2+如果超人不会飞2+如果超人不会飞2+如果超人不会飞2+如果超人不会飞2+如果超人不会飞2+如果超人不会飞2",bb:200,cc:1,dd:0,cee:1234567}],tableData2:[]}},methods:{setCellStyle:function(n){if(n.row.bb>100&&2===n.columnIndex)return"color: red"},setHeaderStyle:function(n){if(2===n.columnIndex)return"color: red"},select:function(n){console.log(n)},selectAll:function(n){console.log("全选",n)},dblclick:function(n,t,e){console.log("row",n),console.log("column",t),console.log("event",e)},search:function(){},reset:function(){this.formData={}},doHandle:function(n,t){console.log("index",n),console.log("row",t)},clickId:function(n,t){console.log("index",n),console.log("row",t)},loadMore:function(){}},created:function(){for(var n=0;n<1200;n++)this.tableData2.push({aa:"如果超人不会飞"+n,bb:"如果如果超人不会飞如果超"+n,cc:0});this.tableData2=this.tableData2.concat(this.tableData).reverse()}},r=s,i=(e("8e02"),e("2877")),c=Object(i["a"])(r,a,o,!1,null,"4cd342e2",null);t["default"]=c.exports},"7d0a":function(n,t,e){},"841c":function(n,t,e){"use strict";var a=e("c65b"),o=e("d784"),l=e("825a"),s=e("7234"),r=e("1d80"),i=e("129f"),c=e("577e"),d=e("dc4a"),u=e("14c3");o("search",(function(n,t,e){return[function(t){var e=r(this),o=s(t)?void 0:d(t,n);return o?a(o,t,e):new RegExp(t)[n](c(e))},function(n){var a=l(this),o=c(n),s=e(t,a,o);if(s.done)return s.value;var r=a.lastIndex;i(r,0)||(a.lastIndex=0);var d=u(a,o);return i(a.lastIndex,r)||(a.lastIndex=r),null===d?-1:d.index}]}))},"8e02":function(n,t,e){"use strict";e("023b")},9306:function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",[t("v-md-editor",{staticClass:"github-markdown-body",attrs:{value:n.text,mode:"preview"}}),t("Fixed",{scopedSlots:n._u([{key:"default",fn:function(){return[t("div",{staticStyle:{"text-align":"center"}},[n._v("底部固定")])]},proxy:!0}])})],1)},o=[],l=e("fdf1"),s={components:{fixed:l["default"]},data:function(){return{text:'\n  ### 底部固定\n  #### Fixed基础用法\n  - `template(v-slot)` 使用插槽直接加内容即可\n  ##### 示例代码\n  ```pug\n    Fixed\n      template(v-slot)\n        div(style="text-align: center") 底部固定\n  ```\n      '}},methods:{}},r=s,i=(e("348f"),e("2877")),c=Object(i["a"])(r,a,o,!1,null,"aaa7a918",null);t["default"]=c.exports},9945:function(n,t,e){"use strict";e("427d")},a0a1:function(n,t,e){"use strict";e("b78c")},a40a:function(n,t,e){"use strict";e.r(t);e("ac1f"),e("841c");var a=function(){var n=this,t=n._self._c;return t("div",[t("v-md-editor",{staticClass:"github-markdown-body",attrs:{value:n.text,mode:"preview"}}),t("div",{staticClass:"demo-content"},[t("tableSearch",{attrs:{"need-reset":!0,showMoreCondition:!1},on:{submit:n.search,reset:n.reset}},[t("div",{attrs:{slot:"condition"},slot:"condition"},[t("el-form-item",{attrs:{label:"查询条件"}},[t("el-input",{attrs:{size:"small",placeholder:"请输入",clearable:""},model:{value:n.formData.a,callback:function(t){n.$set(n.formData,"a",t)},expression:"formData.a"}})],1)],1)])],1),t("v-md-editor",{staticClass:"github-markdown-body",attrs:{value:n.text2,mode:"preview"}}),t("div",{staticClass:"demo-content"},[t("search-group",{attrs:{"need-reset":!0,lableWidth:80},on:{submit:n.search,reset:n.reset}},[t("div",{attrs:{slot:"condition"},slot:"condition"},[t("el-form-item",{attrs:{label:"查询条件"}},[t("el-input",{attrs:{size:"small",placeholder:"请输入",clearable:""},model:{value:n.formData.x1,callback:function(t){n.$set(n.formData,"x1",t)},expression:"formData.x1"}})],1),t("el-form-item",{attrs:{label:"查询条件"}},[t("el-input",{attrs:{size:"small",placeholder:"请输入",clearable:""},model:{value:n.formData.x2,callback:function(t){n.$set(n.formData,"x2",t)},expression:"formData.x2"}})],1),t("el-form-item",{attrs:{label:"查询条件"}},[t("el-input",{attrs:{size:"small",placeholder:"请输入",clearable:""},model:{value:n.formData.x3,callback:function(t){n.$set(n.formData,"x3",t)},expression:"formData.x3"}})],1),t("el-form-item",{attrs:{label:"是否"}},[t("el-select",{attrs:{size:"small",placeholder:"请选择",clearable:""},model:{value:n.formData.x4,callback:function(t){n.$set(n.formData,"x4",t)},expression:"formData.x4"}},[t("el-option",{attrs:{label:"是",value:1}}),t("el-option",{attrs:{label:"否",value:2}})],1)],1)],1)])],1)],1)},o=[],l=e("08cf"),s={components:{easyTable:l["default"]},data:function(){return{formData:{},text:'\n  ### 查询栏\n  #### TableSearch基础用法\n  `查询条件`和`按钮`左右分布\n  - `submit`：点击查询按钮触发，自定义处理逻辑\n  - `need-reset`：是否显示重置按钮\n  - `reset`：点击重置按钮触发，自定义处理逻辑\n  - `showMoreCondition`：查询条件超过一行是否自动展开\n\n  使用`TableSearch`组件只需要使用`slot="condition"`引入插槽，在内部定义`el-form-item`表单项即可。\n  > ps：因为重置不是单纯把入参置空，而是把入参重置到`初始化`状态，比如时间条件，重置为最近一周，所以需要自定义重置逻辑。\n  #### 示例\n  ```html\n  tableSearch(@submit="search" :need-reset="true" @reset="reset" :showMoreCondition="false")\n  \tdiv(slot="condition")\n  \t\tel-form-item(label="查询条件")\n  \t\t\tel-input(v-model="formData.a" size="small" placeholder="请输入" clearable)\n  ```\n      ',text2:'\n  #### SearchGroup基础用法\n\n  `查询条件`和`按钮`上下分布\n  - `lableWidth`：设置查询条件文案长度。\n  其他属性参考`TableSearch`\n  > tip：不支持查询条件伸缩，默认平铺\n\n  #### 示例\n  ```html\n  search-group(\n    :need-reset="true",\n    :lableWidth="80",\n    @submit="search",\n    @reset="reset",\n  )\n  div(slot="condition")\n  \tel-form-item(label="查询条件")\n    \tel-input(v-model="formData.x1" size="small" placeholder="请输入" clearable)\n    el-form-item(label="查询条件")\n    \tel-input(v-model="formData.x2" size="small" placeholder="请输入" clearable)\n    el-form-item(label="查询条件")\n    \tel-input(v-model="formData.x3" size="small" placeholder="请输入" clearable)\n    el-form-item(label="是否")\n      el-select(v-model="formData.x4" size="small" placeholder="请选择" clearable)\n      \tel-option( label="是" :value="1")\n        el-option( label="否" :value="2")\n  ```\n\n      '}},methods:{search:function(){},reset:function(){this.formData={}}}},r=s,i=(e("d336"),e("2877")),c=Object(i["a"])(r,a,o,!1,null,"40f3c74e",null);t["default"]=c.exports},b78c:function(n,t,e){},ca74:function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("el-tabs",{attrs:{"tab-position":"right"}},[t("el-tab-pane",{attrs:{label:"安装"}},[t("v-md-editor",{attrs:{value:n.text,mode:"preview"}})],1),t("el-tab-pane",{attrs:{label:"查询栏"}},[t("tableSearchDemo")],1),t("el-tab-pane",{attrs:{label:"描述性表格"}},[t("descriptionsTableDemo")],1),t("el-tab-pane",{attrs:{label:"分页表格"}},[t("easyTableDemo")],1),t("el-tab-pane",{attrs:{label:"滚动效果表格"}},[t("rollingDynamicDemo")],1),t("el-tab-pane",{attrs:{label:"底部固定"}},[t("fixedDemo")],1),t("el-tab-pane",{attrs:{label:"加载动画"}},[t("animationDemo")],1)],1)},o=[],l=e("a40a"),s=e("3de0"),r=e("74d7"),i=e("0416"),c=e("9306"),d=e("fa14"),u={name:"home",components:{tableSearchDemo:l["default"],descriptionsTableDemo:s["default"],easyTableDemo:r["default"],rollingDynamicDemo:i["default"],fixedDemo:c["default"],animationDemo:d["default"]},data:function(){return{text:"\n  ## 组件\n  ### 组件引用\n\n  ```js\n  npm i zj-port\n  ```\n  同elementUI等组件框架，无需手工注册，在main.js内导入，然后use即可，如下：\n  ```js\n  import zjport from 'zj-port';\n  Vue.use(zjport);\n  ```\n\n  ### 新增组件(组员)\n\n  - 1、在目录 src/components 下新增组件同名的文件夹\n  - 2、增加组件和对应js，js用于导出单个组件\n  - 3、修改 src/index.js 文件，导入导出新增的组件\n  - 4、package.json version的版本递增如：1.0.7 -> 1.0.8\n  - 5、通知管理员，npm publish 上传到npm库\n\n  >注意：编写的组件需要定义 name 属性，原因如下：\n  >```js\n  >// 遍历注册组件时候需要使用component.name 默认约定的规范是全小写，或者 小写-小写\n  >const install = function (Vue, opts = {}) {\n  >\t\tcomponents.map(component => {\n  >\t\t\tVue.component(component.name, component);\n  >\t\t})\n  >};\n  >```\n      "}}},m=u,p=e("2877"),b=Object(p["a"])(m,a,o,!1,null,"7013b3d0",null);t["default"]=b.exports},d336:function(n,t,e){"use strict";e("7d0a")},fa14:function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{attrs:{id:"animation-loading"}},[t("Animation",{attrs:{maskColor:n.maskColor,pointColor:n.pointColor,shapeType:n.shapeType,appendNode:"#animation-loading1",isShow:!0}}),t("v-md-editor",{staticClass:"github-markdown-body",attrs:{value:n.text,mode:"preview"}}),t("div",{staticStyle:{margin:"0 30px"}},[t("h4",{on:{click:function(t){return n.switchType(1)}}},[n._v("示例1")])]),n._m(0)],1)},o=[function(){var n=this,t=n._self._c;return t("div",{staticClass:"demo-content",attrs:{id:"animation-loading1"}},[t("div",{staticStyle:{padding:"0 30px"}})])}],l=e("24c7"),s={components:{Animation:l["default"]},data:function(){return{maskColor:"",pointColor:"",shapeType:"square",text:'\n  ### 加载动画\n  #### Animation\n  - `maskColor`：动画模块遮罩的颜色，默认值`rgba(10,10,10,0.1);`，可选格式为`#444/rgb(32, 82, 149)/red`，字符串类型\n  - `pointColor`：动画模块的颜色，默认值`rgba(32, 82, 149,0.9)`，可选格式为`#444/rgb(32, 82, 149)/red`，字符串类型\n  - `shapeType`：动画模块的形状，默认值`square`，可选值为`square/circle`，字符串类型\n  - `isShow`：是否显示，默认值`false`，可选值为`true/false`，字符串或者布尔类型\n  - `appendNode`：需要附加加载框的接口，默认值`body`\n  > 默认是整个页面都是灰色遮罩，需要具体到某个节点的，将节点添加id，appendNode设置这个id\n  > **注意1**，灰色遮罩是依赖`position: absolute`定位的，到具体节点的话，请css设置`position: relative`\n  > **注意2**，灰色遮罩宽度是`width: 100%`，设置id的节点使用padding左右边距会偏移。由于是相对定位和绝对定位，box-sizing: border-box设置也无效。解决办法：设置id的节点不使用padding左右边距，需要左右边距的，在子div设置即可\n\n  > Animation声明位置，没有强制要求，不语法报错即可\n  > Animation一个页面不支持有多个加载动画\n  #### 示例\n  ```pug\n  // html-pug\n  div(id="animation-loading")\n    Animation(pointColor="", shapeType="square", appendNode="#animation-loading1", :isShow="true")\n    v-md-editor.github-markdown-body(:value="text" mode="preview")\n    div(id="animation-loading1").demo-content\n       div(style="padding: 0 30px") 这是需要设置加载框的节点\n  ```\n  ```css\n  // css\n  .demo-content {\n    position: relative;\n    border: 1px solid rgba(244,244,244, 0.9);\n    padding: 12px 0px;\n    margin: 0 30px;\n    height: 100px;\n  }\n  ```\n      '}},methods:{switchType:function(n){1==n?(this.maskColor="",this.pointColor="",this.shapeType="square"):2==n&&(this.maskColor="#fff",this.pointColor="#FD8A8A",this.shapeType="rotateSquare")}}},r=s,i=(e("9945"),e("2877")),c=Object(i["a"])(r,a,o,!1,null,"680d6e18",null);t["default"]=c.exports},ff86:function(n,t,e){}}]);
//# sourceMappingURL=chunk-5fafcb9a.e24d9b3f.js.map